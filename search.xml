<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>UnitedCaps Info</title>
      <link href="/undefined/2025/01/22/UnitedCaps-Info/"/>
      <url>/undefined/2025/01/22/UnitedCaps-Info/</url>
      
        <content type="html"><![CDATA[<h1 id="AX2012"><a href="#AX2012" class="headerlink" title="AX2012"></a>AX2012</h1><p>This issues and request will be under Business Level 2 Gwladys</p><h1 id="Dynamic365"><a href="#Dynamic365" class="headerlink" title="Dynamic365"></a>Dynamic365</h1><p>This issues and request will be under Business Level 2 Gwladys</p><h1 id="Salesforce"><a href="#Salesforce" class="headerlink" title="Salesforce"></a>Salesforce</h1><p>In salesforce, when a contact is created without account, it’s considered as private contacts.<br>So only the owner can edit contact’s information.</p><h1 id="IT-Support"><a href="#IT-Support" class="headerlink" title="IT Support"></a>IT Support</h1><p><em><strong>Snooze Ticket</strong></em><br>The status need to be changed to pending ( It still effect on SLA but at least customer know the status )</p><p><em><strong>KPI Measurement</strong></em><br>Decision behind management</p><p><em><strong>Escalation</strong></em><br>Provide information &amp; what did you done or provide analysis the root cause if know before submit to Infra Level 2</p><p><em><strong>Asset Management</strong></em><br>Forcast for replacement budget how many asset need to be replace | warranty check if the asset having issue ( decided to have a new unit or warranty claim )</p><ul><li>PO number can be trace on the ERP system</li><li>for identify how many asset provided to user when they are departure</li></ul><p><em><strong>FastTrack</strong></em><br>Need to take action for the moment for special sitaution, after action taken remove the ticket from fast track doesn’t mean close ticket, just put it back to normal process</p><p><em><strong>On Call Schedule</strong></em><br>Not for solving as priority, just need to communication with incident case and get the information<br>-- on leave applied - drop an email to Michael<br>-- public holiday malaysia - update on calender and inform Michael a week before</p><p>-- How to manage incident - if a big incident please stay clam get the important details<br>-- understand change calendar what is happend for the event going to</p><p><em><strong>Portal platform information</strong></em><br>Most of the platform can be found in bitwarden<br><em><strong>kemp</strong></em></p><p><em><strong>kemp</strong></em></p><p><em><strong>kemp</strong></em></p><p><em><strong>kemp</strong></em></p><p><em><strong>kemp</strong></em></p><p><em><strong>kemp</strong></em></p><h1 id="Information"><a href="#Information" class="headerlink" title="Information"></a>Information</h1><p>Datacenter 1 Bissen ( backup to AWS )<br>Datacenter 2 buterbourgs ( backup to AWS )<br>Datacenter 3 AWS (Backup) &gt; download to on-preme such as NAS</p><ul><li>bitwarden password manager platform introduction</li><li>Arc browser introduction</li><li>zoom channel introduction</li></ul>]]></content>
      
      
      <categories>
          
          <category> UC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>南瓜饼</title>
      <link href="/undefined/2025/01/02/%E5%8D%97%E7%93%9C%E9%A5%BC/"/>
      <url>/undefined/2025/01/02/%E5%8D%97%E7%93%9C%E9%A5%BC/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
          <category> Cooking </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>铁板豆腐</title>
      <link href="/undefined/2025/01/02/Life/"/>
      <url>/undefined/2025/01/02/Life/</url>
      
        <content type="html"><![CDATA[<h2 id="1-需要的材料"><a href="#1-需要的材料" class="headerlink" title="1. 需要的材料"></a>1. 需要的材料</h2><p><strong>酱味材料</strong></p><ul><li>麻油sesame oil</li><li>生抽 light soy sauce</li><li>老抽dark soy sauce</li><li>耗油oyster sauce</li><li>绍兴酒Wine hua diao</li></ul><p><strong>调味材料</strong></p><ul><li>食盐salt</li><li>白胡椒粉white perper powder</li><li>蒜头garlic</li><li>老姜ginger</li><li>红葱头red onion mini</li><li>青葱spring onion</li><li>红辣椒red chili</li><li>香菇mushroom</li></ul><p><strong>辅助材料</strong></p><ul><li>玉米淀粉corn starch</li><li>木薯粉potato starch</li></ul><p><strong>其他材料</strong></p><ul><li>日本豆腐japan toufu</li><li>鸡蛋eggs</li><li>水water</li><li>猪肉pork</li></ul><h2 id="需前提准备好"><a href="#需前提准备好" class="headerlink" title="需前提准备好"></a>需前提准备好</h2><ul><li><p>1茶匙 生抽  ||  1汤匙 生抽</p></li><li><p>1&#x2F;4茶匙 盐</p></li><li><p>1&#x2F;4茶匙 白胡椒粉 2份</p></li><li><p>1茶匙 玉米淀粉</p></li><li><p>1茶匙 麻油 2份</p></li><li><p>3香菇 剁碎 ( 提前泡水 )</p></li><li><p>3蒜辫 剁碎</p></li><li><p>20克老姜 切碎</p></li><li><p>1红葱头( 小粒 ) 切碎</p></li><li><p>1束青葱 切段</p></li><li><p>1红辣椒 切片</p></li><li><p>2蛋豆腐 切块</p></li><li><p>酱料调制<br>  – 2汤匙 蚝油<br>  – 1汤匙 绍兴酒<br>  – 1 茶匙 麻油<br>  – 1 茶匙 老抽<br>  – 1&#x2F;4 白胡椒粉<br>  – 1汤匙 生抽</p></li><li><p>木薯淀粉浆调制<br>  – 1 汤匙 木薯粉 ( 比较浓稠 比较跟 玉米淀粉 )<br>  – 2 汤匙 水</p></li></ul><h2 id="准备第一步"><a href="#准备第一步" class="headerlink" title="准备第一步"></a>准备第一步</h2><ul><li>将 猪肉剁碎</li><li>1茶匙 生抽</li><li>1&#x2F;4茶匙 盐</li><li>1&#x2F;4茶匙 白胡椒粉</li><li>1茶匙 玉米淀粉</li><li>1茶匙 麻油</li><li>保鲜膜放置30分钟</li></ul><h2 id="准备第二步"><a href="#准备第二步" class="headerlink" title="准备第二步"></a>准备第二步</h2><ul><li><p>油炸豆腐至黄金色</p></li><li><p>开始爆香<br>  – 蒜末<br>  – 红葱头片<br>  – 姜末<br>  – 香菇</p></li><li><p>加入腌制肉碎 一起煮到白透</p></li><li><p>倒入调制酱料</p></li><li><p>加入1 1&#x2F;2杯水 煮至沸腾</p></li><li><p>倒入木薯淀粉浆</p></li></ul><h2 id="最后一步"><a href="#最后一步" class="headerlink" title="最后一步"></a>最后一步</h2><ul><li>烧铁板 + 刷油</li><li>准备2 鸡蛋 然后打碎</li><li>倒入铁板 煮到蛋液半凝固</li><li>放入肉碎 + 豆腐 煮大概一分钟</li></ul><p>＃ 完成✅</p><p><img src="/images/cook_dish.jpg" alt="完成品"></p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
          <category> Cooking </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexoの评论系统部署</title>
      <link href="/undefined/2024/12/11/Hexo%E3%81%AE%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/"/>
      <url>/undefined/2024/12/11/Hexo%E3%81%AE%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ul><li><strong>Waline官方文档</strong></li><li><strong>LeanCloud账号</strong></li><li><strong>Versel服务端</strong></li><li><strong>域名绑定</strong> （非必须）</li></ul><h1 id="LeanCloud注册"><a href="#LeanCloud注册" class="headerlink" title="LeanCloud注册"></a>LeanCloud注册</h1><ol><li><a href="https://console.leancloud.app/login">登录</a> 或 <a href="https://console.leancloud.app/register">注册</a> LeanCloud 国际版</li><li>点击左上角 <a href="https://console.leancloud.app/apps">创建应用</a><ul><li>App name（必填）</li><li>选择免费 <strong>Developer</strong> 开发板</li></ul></li></ol><p><img src="/images/leancloud_create_app.png" alt="创建应用"><br><br> 3. 选择刚创建的应用  </p><p><img src="/images/select_leancloud_app.png" alt="选择应用"><br></p><ol start="4"><li>点击 <strong>Settings</strong> 然后 <strong>App Keys</strong>，记录 AppID | AppKey | MasterKey，后面会用到</li></ol><p><img src="/images/app_clientid_key.png" alt="选择应用"><br></p><h1 id="Vercel服务端部署"><a href="#Vercel服务端部署" class="headerlink" title="Vercel服务端部署"></a>Vercel服务端部署</h1><div style="text-align: center;">  <a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample" target="_blank" style="display: inline-block; padding: 2px 21px; background-color: #000000; color: white; text-decoration: none; border-radius: 8px; font-weight: bold;">    Deploy  </a>  <div style="margin-top: 0px; font-size: 12px; color: #808080;">    Vercel  </div></div><ol><li><p>点击<strong>上方按钮</strong>，跳转到 Vercel 进行 Server端部署  </p></li><li><p>登录 <strong>GitHub</strong></p></li></ol><p><img src="/images/vercel_connect.jpg" alt="登录GitHub"><br></p><ol start="3"><li>点击 <strong>Authorize Vercel</strong></li></ol><p><img src="/images/github_authorize_vercel.jpg" alt="搜全Vercel访问GitHub"><br></p><ol start="4"><li>在 <strong>Git Scope</strong> 选择 <strong>GitHub Account</strong></li></ol><p><img src="/images/add_github_account.jpg" alt="添加GitHub账号"><br></p><ol start="5"><li><strong>安装 Vercel</strong> 到 <strong>全部</strong> &#x2F; <strong>指定</strong> 的 Repositories</li></ol><p><img src="/images/install_vercel2github.jpg" alt="安装Vercel到GitHub Repo"><br></p><ol start="6"><li>确保 <strong>Git Scope</strong> 出现你的 <strong>GitHub账户名</strong>，<br>然后在 <strong>Private Repository Name</strong> 创建新的repo<br>点击 <strong>Create</strong></li></ol><p><img src="/images/repos_name.jpg" alt="创建Vercel Repo"><br></p><ol start="7"><li>耐心地等待部署</li></ol><p><img src="/images/vercel_deployment.jpg" alt="开始部署Vercel"><br></p><ol start="8"><li>成功部署后，将会看到 <strong>Congratulations!</strong> 然后点击 <strong>Continue to Dashboard</strong></li></ol><p><img src="/images/vercel_successful.jpg" alt="成功部署"><br>  </p><ol start="9"><li>你将看到 <strong>Vercel</strong> 的主页面</li></ol><p><img src="/images/vercel_main.jpg" alt="Vercel主页"><br></p><ol start="10"><li>点击 <strong>Settings</strong><br>您需要在图中的3号创建三个新的环境变量： <strong>LEAN_ID</strong> 、 <strong>LEAN_KEY</strong> 和 <strong>LEAN_MASTER_KEY</strong>。<br>每个变量的值对应于从 <strong>LeanCloud</strong> 保存的凭据：<br><strong><code>APP ID</code></strong> 对应于 <strong><code>LEAN_ID</code></strong> 变量的值，<br><strong><code>APP Key</code></strong> 对应于 <strong><code>LEAN_KEY</code></strong> 变量的值，<br><strong><code>Master Key</code></strong> 对应于 <strong><code>LEAN_MASTER_KEY</code></strong> 变量的值。</li></ol><p><img src="/images/vercel_settings_1.jpg" alt="Vercel设置"><br></p><ol start="11"><li>一旦环境变量配置完成，您需要重新部署您的应用程序。点击项目顶部的 <strong><code>Deployments</code></strong> 标签，在列表顶部找到最新的部署记录，然后在右侧的下拉菜单中选择 <strong><code>Redeploy</code></strong> 。</li></ol><p><img src="/images/vercel_redeploy.png" alt="vercel重部署"><br></p><ol start="12"><li>如果一切正常，Vercel 会将您重定向到概览页面以开始重新部署。等待 STATUS 状态更改为 Ready。现在，您可以点击 Visit 访问该网站。此链接就是您的服务器地址。</li></ol><p><img src="/images/vercel_redeploy.png" alt="重部署完毕"><br></p>]]></content>
      
      
      <categories>
          
          <category> Platform </category>
          
          <category> Hexoの评论系统部署 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工作文化差异</title>
      <link href="/undefined/2024/12/05/%E5%B7%A5%E4%BD%9C%E6%96%87%E5%8C%96%E5%B7%AE%E5%BC%82/"/>
      <url>/undefined/2024/12/05/%E5%B7%A5%E4%BD%9C%E6%96%87%E5%8C%96%E5%B7%AE%E5%BC%82/</url>
      
        <content type="html"><![CDATA[<h1 id="西方和东方工作思维"><a href="#西方和东方工作思维" class="headerlink" title="西方和东方工作思维"></a>西方和东方工作思维</h1><p><em><strong>东方思维讲究能者多劳</strong></em><br>身为东方人在东方文化的企业工作一点也不奇怪，也逐渐潜移默化和接受所谓的micro manage，权力剥夺，人力压榨，没有职业发展机会，没有人权。</p><p>其实又何尝不是一直在自己的内心拉扯，如何寻找机会，如何向往更好的去处，如何提升自己的价值。<br>我一直都相信价值是最有利的资本也是别人偷不走，很肯定的说这跟自己本身没有亮丽的学历缺点而让我琢磨到到的一个促使我一直在学习的动力点。</p><p>无可否认有能力优秀，能言善道，职场的佼佼者比比皆是，但是也有很多态度让人不敢恭维。<br>我个人对态度 和 能力之间的区别是，能力比心态更容易修。</p><p>修心态是通过学习，然后自己悟，悟，悟，再悟 最后也未必悟到<br>修能力是通过学习，不断实践，然后总结记录</p><p>💢 例子:<br>以前哥哥教我数学教到他吐血我还是不明白，有两个可能性，一 哥哥的教学方法不适合我， 二 我自己悟性低 所以需要自己去寻找合适自己的教学方式</p><p>你看，像这种基本的生活中的一些学科还是生活技能是属于静态的有些时候我们都需要不断地去学做教才知道它的原理</p><p>更何况是人的心态是属于动态，无时无刻都在变的，你认为自己用20年形成的心态，价值观可能在短短的几个月时间扭转吗 ? 不是没有可能，我说概率如果10人中只有2人做到, 那你要设想如何变成那2人的其中一位 ?<br>再不然就是你人生发生某事情对你深受影响造成你的心态改变， 那么这个概率又是多少 ?</p><p>所以 这就是我认为能力比心态更容易修，心态比能力更重要</p><p>世界所有的事物可以说是以概率来衡量，</p><ul><li><p>例如买马票，得奖机率是万分之一，如何提升中奖概率 ? 买越多越好</p></li><li><p>应征工作被录取的机率视你的能力是否超越其他竞争者还是低于竞争者，如何提升被录取的概率 ? 自我提升价值</p></li></ul><p>话说为什么会扯偏到概率，因为世事无绝对，你目前的风光有可能一瞬间就风光不再，<br>默默无闻的人也可能一瞬间风生水起，这就是宇宙的规律，所以努力修自己的一颗平凡心。</p><p>修行 是一辈子的功课</p><br><p><em><strong>西方思维文化讲究人权</strong></em><br>2023年踏入西方企业，发现挺与众不同虽然称不上神仙公司，庆幸的是我的上司是西方人为此或多或少都得到了一些人权的重视和保护<br>可以说是反打东方文化，他们重视个人人权，尊重和授权个人的专业，他们也不接受跨领域工作内容，没有所谓顺便帮忙，是该部门的范围就是该部门的责任。他们不提倡放工后时间工作，除非紧急事件，但西方人很是steady即使天塌下来也是被当被盖。</p><p>个人职业发展这一块也是不一样，在东方文化多数是空降比你有经验的人当你的领导，在西方文化他们是重视提拔旧人然后再聘请新人让你有机会一带一路学习领导+深入去学习和胜任新任务和挑战。</p><p>他们也蛮重视个人感受 所以他们很能接受负面反馈哪怕对你来说只是皮毛蒜头，你无需担心他们对你印象不好或者针对你，当然前提是有理的反馈不是无中生有。 他们会进行一对一沟通了解哪个环节出问题并解决，整体上都感受得到他们要解决的诚意。</p>]]></content>
      
      
      <categories>
          
          <category> Work </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>离别</title>
      <link href="/undefined/2024/12/05/%E7%A6%BB%E5%88%AB/"/>
      <url>/undefined/2024/12/05/%E7%A6%BB%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="与世长辞"><a href="#与世长辞" class="headerlink" title="与世长辞"></a>与世长辞</h1><p>我一直都相信</p>]]></content>
      
      
      <categories>
          
          <category> Stories </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Basic</title>
      <link href="/undefined/2024/12/04/Python/"/>
      <url>/undefined/2024/12/04/Python/</url>
      
        <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>**</p><h1 id="Types-of-Databases"><a href="#Types-of-Databases" class="headerlink" title="Types of Databases"></a>Types of Databases</h1><ul><li>String字符串</li><li>Integer整数</li><li>Float浮点数</li><li>Boolean布尔值</li><li>Tuple元组</li><li>List列表</li><li>Dictionary字典</li><li>Set集合</li></ul><hr><h1 id="If…Else"><a href="#If…Else" class="headerlink" title="If…Else"></a>If…Else</h1><p><em>Conditions and If statements</em><br>Python supports the usual logical conditions from mathematics:</p><ul><li>Equals: a &#x3D;&#x3D; b</li><li>Not Equals: a !&#x3D; b</li><li>Less than: a &lt; b</li><li>Less than or equal to: a &lt;&#x3D; b</li><li>Greater than: a &gt; b</li><li>Greater than or equal to: a &gt;&#x3D; b</li></ul><p>Example<br>If statement:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Example</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If statement:</span></span><br><span class="line"></span><br><span class="line">a = 33</span><br><span class="line">b = 200</span><br><span class="line">if b &gt; a:</span><br><span class="line">  print(&quot;b is greater than a&quot;)</span><br></pre></td></tr></table></figure><p><em>Indentation</em><br>Python relies on indentation (whitespace at the beginning of a line) to define scope in the code.<br>If statement, without indentation (will raise an error):</p><pre><code class="shell">a = 33b = 200if b &gt; a:print(&quot;b is greater than a&quot;) # you will get an error</code></pre><h1 id="Functions-函数"><a href="#Functions-函数" class="headerlink" title="Functions (函数)"></a>Functions (函数)</h1><p>自定义函数如果没有指定返回结果，默认返回空值None。<br>如果返回指定的数据如字典，列表，字符串，整数，浮点数 就可以对它们进行处理</p><p>如返回的数据是字典就会赋值给变量，<br>该变量就可以进行字典的处理  </p><p><strong>位置参数 (args)</strong></p><ul><li>*args：接收任意数量的 位置参数” 参数会被作为一个元组传递给函数。 </li><li>*是语法标记，args 是约定的名字，可以用其他名称代替（如 *params），但 *args 是社区推荐的写法。</li></ul><p><strong>关键字参数 (kwargs)</strong></p><ul><li>**kwargs 允许函数接受任意数量的 关键字参数，参数会被作为一个字典传递给函数。</li><li>**是语法标记，kwargs 是约定的名字，也可以用其他名称代替（如 **options）</li></ul><h1 id="For-Loops-for-循环"><a href="#For-Loops-for-循环" class="headerlink" title="For Loops (for 循环)"></a>For Loops (for 循环)</h1><h1 id="While-Loops-while-循环"><a href="#While-Loops-while-循环" class="headerlink" title="While Loops (while 循环)"></a>While Loops (while 循环)</h1>]]></content>
      
      
      <categories>
          
          <category> Skill </category>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexoの夜间模式</title>
      <link href="/undefined/2024/12/03/hexo%E3%81%AE%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F/"/>
      <url>/undefined/2024/12/03/hexo%E3%81%AE%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="添加夜间模式按钮"><a href="#添加夜间模式按钮" class="headerlink" title="添加夜间模式按钮"></a><em>添加夜间模式按钮</em></h4><p>步骤一 安装夜间模式插件 :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure><p>步骤二 往 NexT 主题的 _config.yml 配置文件里添加以下内容 :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Darkmode JS</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span></span><br><span class="line">darkmode_js:</span><br><span class="line">  enable: true</span><br><span class="line">  bottom: &#x27;64px&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  right: &#x27;unset&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  left: &#x27;32px&#x27; # default: &#x27;unset&#x27;</span><br><span class="line">  time: &#x27;0.5s&#x27; # default: &#x27;0.3s&#x27;</span><br><span class="line">  mixColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  backgroundColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  buttonColorDark: &#x27;#100f2c&#x27; # default: &#x27;#100f2c&#x27;</span><br><span class="line">  buttonColorLight: &#x27;#fff&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  isActivated: false # default false</span><br><span class="line">  saveInCookies: true # default: true</span><br><span class="line">  label: &#x27;🌓&#x27; # default: &#x27;&#x27;</span><br><span class="line">  autoMatchOsTheme: true # default: true</span><br><span class="line">  libUrl: # Set custom library cdn url for Darkmode.js</span><br></pre></td></tr></table></figure><ul><li>isActivated: true：默认激活暗黑&#x2F;夜间模式，请始终与 saveInCookies: false、autoMatchOsTheme: false 一起使用；同时需要在 NexT 主题的 _config.yml 配置文件里设置 pjax: true，即启用 Pjax。</li></ul><h4 id="自定义css样式"><a href="#自定义css样式" class="headerlink" title="自定义css样式"></a>自定义css样式</h4><p>暗黑&#x2F;夜间模式激活后，插件会将 darkmode–activated CSS 类添加到 body 标签上，你可以利用它覆盖插件默认自带的样式（如下所示），这样就可以实现暗黑&#x2F;夜间模式 CSS 样式的高度自定义。<br>在themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_custom.styl添加以下代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">.darkmode--activated &#123;</span><br><span class="line">  --body-bg-color: #282828;</span><br><span class="line">  --content-bg-color: #333;</span><br><span class="line">  --card-bg-color: #555;</span><br><span class="line">  --text-color: #ccc;</span><br><span class="line">  --blockquote-color: #bbb;</span><br><span class="line">  --link-color: #ccc;</span><br><span class="line">  --link-hover-color: #eee;</span><br><span class="line">  --brand-color: #ddd;</span><br><span class="line">  --brand-hover-color: #ddd;</span><br><span class="line">  --table-row-odd-bg-color: #282828;</span><br><span class="line">  --table-row-hover-bg-color: #363636;</span><br><span class="line">  --menu-item-bg-color: #555;</span><br><span class="line">  --btn-default-bg: #222;</span><br><span class="line">  --btn-default-color: #ccc;</span><br><span class="line">  --btn-default-border-color: #555;</span><br><span class="line">  --btn-default-hover-bg: #666;</span><br><span class="line">  --btn-default-hover-color: #ccc;</span><br><span class="line">  --btn-default-hover-border-color: #666;</span><br><span class="line">  --highlight-background: #282b2e;</span><br><span class="line">  --highlight-foreground: #a9b7c6;</span><br><span class="line">  --highlight-gutter-background: #34393d;</span><br><span class="line">  --highlight-gutter-foreground: #9ca9b6;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.darkmode--activated img &#123;</span><br><span class="line">  opacity: 0.75;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.darkmode--activated img:hover &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.darkmode--activated code &#123;</span><br><span class="line">  color: #69dbdc;</span><br><span class="line">  background: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="取消夜间模式"><a href="#取消夜间模式" class="headerlink" title="取消夜间模式"></a>取消夜间模式</h4><ul><li>当某个标签不想使用暗黑&#x2F;夜间模式时，可以添加 darkmode-ignore CSS 类到标签上。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;darkmode-ignore&quot;&gt;😬&lt;span&gt;</span><br></pre></td></tr></table></figure><ul><li>当然你也可以使用 isolation: isolate; CSS 样式来忽略暗黑&#x2F;夜间模式。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.button &#123;</span><br><span class="line">  isolation: isolate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>也可以使用这种 mix-blend-mode: difference CSS 样式来还原暗黑&#x2F;夜间模式。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.button &#123;</span><br><span class="line">  mix-blend-mode: difference;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p><img src="/images/pic1.png" alt="sudo字眼没有高光"><br><em>原因</em></p><ol><li>在 Markdown 文件中，如果代码块未指定语言类型，语法高亮引擎可能无法正确解析 sudo。</li><li>主题颜色</li></ol><p><em>解决方案</em></p><ul><li>使用语法高亮主题</li></ul><ol><li>打开 NexT 的配置文件：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">themes/next/_config.yml</span><br></pre></td></tr></table></figure><ol start="2"><li>找到以下设置并修改高亮主题为支持亮色的夜间样式，例如 dracula 或其他亮色主题：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  theme: monokai</span><br></pre></td></tr></table></figure><ol start="3"><li>确保在代码块的开头指定正确的语言类型，例如 bash 或 shell：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mariadb-server mariadb-client -y</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">sudo apt install mariadb-server mariadb-client -y</span><br></pre></td></tr></table></figure><ol start="4"><li>保存后运行以下命令以重新生成：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Platform </category>
          
          <category> Hexoの夜间模式 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexoの部署</title>
      <link href="/undefined/2024/12/03/Hexo%E9%83%A8%E7%BD%B2/"/>
      <url>/undefined/2024/12/03/Hexo%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1. 事前准备"></a>1. 事前准备</h1><p>1.1 <strong>GitHub</strong>（必须，你需要注册一个GitHub帐号）<br>1.2 <strong>Cloudflare</strong> （非必须，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用GitHub.io分配的域名）<br>1.3 <strong>域名</strong> （非必须，你也可以使用免费域名，或者GitHub.io或Pages.dev分配的域名也可以）<br><br></p><h1 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2. 软件支持"></a>2. 软件支持</h1><p>2.1 <strong>Node.js</strong> （<strong>必须</strong>） <a href="https://nodejs.org/en">Official link</a></p><ul><li>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。</li><li>下载后安装，安装的目录可以使用默认目录 <strong><code>C:/Program Files/nodejs/</code></strong></li><li>安装完成后，检查是否安装成功。在键盘按下 <strong><code>Win + R</code></strong> 键，输入 <strong><code>CMD</code></strong> ，然后回车，打开CMD窗口，执行 <strong><code>node -v</code></strong> 命令，看到版本信息，则说明安装成功。<br><img src="/./images/nodejs.jpg" alt="成功安装"></li><li>修改npm源。npm下载各种模块。（用于在中国地区, 因为下载速度较慢）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure></li></ul><br><p>2.2 <strong>Git</strong> （<strong>必须</strong>） <a href="https://git-scm.com/downloads">Official link</a></p><ul><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录 <strong>C:&#x2F;Program Files&#x2F;Git</strong></li><li>点击电脑左下角开始即可看见Git CMD、Git Bash、Git GUI。<ul><li><strong>Git CMD</strong> 是windows 命令行的指令风格</li><li><strong>Git Bash</strong> 是linux系统的指令风格（建议使用）</li><li><strong>Git GUI</strong> 是图形化界面（新手学习不建议使用）</li></ul></li></ul><br><p>2.3 <strong>VSCode</strong> （<strong>非必须</strong>，这是一款轻量型的代码编辑器，可以帮助你养成一个很好的编程习惯） <a href="https://code.visualstudio.com/">Official link</a></p><h1 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3. 配置 Git 密钥并连接至 Github"></a>3. 配置 Git 密钥并连接至 Github</h1><p><strong>3.1 查看git的全局配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p><img src="/images/git_bash.jpg" alt="GitBash"></p><br><p><strong>3.2 配置用户名和邮箱</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过 <code>git config -l</code> 检查是否配置成功。（ <em><strong>确保看到user.name 和 user.email，没看到代表没有配置到</strong></em> ）<br><img src="/images/gitconfig.png" alt="git配置"></p><br><p><strong>3.3 配置公钥连接Github</strong></p><ol><li>执行以下命令生成 ssh公钥，此公钥用于你的计算机连接Github<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github邮箱&quot;</span><br></pre></td></tr></table></figure> 提示 <em><strong>Enter file in which to save the key</strong></em> 直接 <strong>一路回车</strong> 即可，新手小白不推荐设置密钥<br> <img src="/images/gitkey.png" alt="生成ssh-key"><br>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件<ul><li><code>id_rsa</code> 私钥</li><li><code>id_rsa.pub</code> 公钥<br> <img src="/images/rsa.png" alt=".shh路径"><br> 用记事本打开上述图片中的公钥id_rsa.pub，复制里面的内容，然后开始在github中配置ssh密钥。<br> <img src="/images/openrsa.png"></li></ul></li></ol><br><ol start="2"><li>将 <strong>SSH KEY</strong> 配置到 GitHub<br>—  进入 <strong>github</strong> &gt; 点击 <strong>右上角头像</strong><br><img src="/images/gitsetting.png" alt="打开github设置"></li></ol><br><p>—  选择 <strong>settings</strong> &gt; 进入设置页选择<br><img src="/images/newssh.png" alt="创建sshkey"></p><br><p>—  左边栏选择 <strong>SSH and GPG keys</strong> &gt; 点击 <strong>New SSH Key</strong><br><img src="/images/donessh.png" alt="完成创建"></p><br><p>—  这里必须要有展示你刚创建的记录<br><img src="/images/sshrecord.png" alt="ssh记录"></p><br><ol start="3"><li>测试链接，输入以下命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure> 第一次连接会提示 <code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code> ，输入 <strong>yes</strong> 即可<br> [暂无图片可展示，以后补上]<br><br> 出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。<br> [暂无图片可展示，以后补上]</li></ol><p><strong>3.4 创建GitHub.io仓库</strong></p><ul><li><p>点击右上角的 <code>+</code> 按钮，选择<strong>New repository</strong>，创建一个 <code>&lt;用户名&gt;.github.io</code> 的仓库。</p></li><li><p>仓库名字的格式必须为： <code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</p></li><li><p>可见性必须选择 <code>Public</code> 方便第一次部署检查问题，点击 <strong>Creat repository</strong> 进行创建即可  </p><pre><code>  [图片上传]</code></pre></li></ul><h1 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4. 初始化 Hexo 博客"></a>4. 初始化 Hexo 博客</h1><ul><li><p>创建一个文件夹来保存博客源码（我这里选的路径为<code>D:/Hexo-Blog</code>），在文件夹内右键鼠标，选择<code>Open Git Bash here</code>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><pre><code>  [图片上传]  </code></pre></li><li><p>在<code>Git BASH</code>输入如下命令安装 Hexo  </p><pre><code>  [图片上传]  </code></pre></li><li><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><pre><code>  [图片上传]  </code></pre></li><li><p>初始化 Hexo 项目安装相关依赖。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line">cd blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><pre><code>  [图片上传]  </code></pre></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：  </p><pre><code>  [图片上传]&lt;br&gt;</code></pre></li><li><p>node_modules：依赖包</p></li><li><p>scaffolds：生成文章的一些模板</p></li><li><p>source：用来存放你的文章</p></li><li><p>themes：主题</p></li><li><p>.npmignore：发布时忽略的文件（可忽略）</p></li><li><p>_config.landscape.yml：主题的配置文件</p></li><li><p>config.yml：博客的配置文件</p></li><li><p>package.json：项目名称、描述、版本、运行和开发等信</p></li><li><p>输入<code>hexo cl &amp;&amp; hexo s</code>启动项目</p><pre><code>  [图片上传]&lt;br&gt;</code></pre></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。  </p><pre><code>  [图片上传]&lt;br&gt;</code></pre></li></ul><h1 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h1><p>5.1 安装 hexo-deployer-git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>5.2 修改 <code>_config.yml</code> 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:cmliussss2024/cmliussss2024.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>5.3 修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><ul><li><p>hexo clean：删除之前生成的文件，可以用<code>hexo cl</code>缩写。</p></li><li><p>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</p></li><li><p>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</p><pre><code>  [图片上传]&lt;br&gt;</code></pre></li></ul><p>如果出现Deploy done，则说明部署成功了。</p><pre><code>    [图片上传]&lt;br&gt;</code></pre><p>稍等两分钟，打开浏览器访问：<a href="https://mapleblog.github.io/">https://mapleblog.github.io</a> ，这时候我们就可以看到博客内容了。</p><pre><code>    [图片上传]&lt;br&gt;</code></pre><h1 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h1><p>6.1 在 <code>Workers 和 Pages</code> 中选择 <code>Pages</code> 的 <code>连接到 Git</code></p><pre><code>    [图片上传]    [图片上传]&lt;br&gt;</code></pre><p>6.2 然后登录你Blog仓库对应的GitHub帐号</p><pre><code>    [图片上传]    [图片上传]&lt;br&gt;</code></pre><p>6.3 点击<code>保存并部署</code>后等待部署完成即可。</p><pre><code>    [图片上传]&lt;br&gt;</code></pre><p>6.4 提示<code>成功！您的项目已部署到以下区域：全球</code>后，浏览器访问：<a href="https://cmliussss2024-github-io.pages.dev/">https://cmliussss2024-github-io.pages.dev</a> ，这时候我们就可以看到博客内容了。  </p><pre><code>    [图片上传]&lt;br&gt;</code></pre><p><em>这时你也就可以将你的&lt;用户名&gt;.github.io的仓库设置为Private私库了</em><br></p><p>6.5 如果你有自己的域名，你可以在这里绑定你自己的自定义域，即可  </p><pre><code>    [图片上传]&lt;br&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Platform </category>
          
          <category> Hexoの部署 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SnipeIT ( Ubuntu 22.04 )</title>
      <link href="/undefined/2024/12/03/SnipeIT/"/>
      <url>/undefined/2024/12/03/SnipeIT/</url>
      
        <content type="html"><![CDATA[<h1 id="安装SnipeIT资产管理平台"><a href="#安装SnipeIT资产管理平台" class="headerlink" title="安装SnipeIT资产管理平台"></a>安装SnipeIT资产管理平台</h1><h5 id="1-Update-the-server-and-install-dependencies"><a href="#1-Update-the-server-and-install-dependencies" class="headerlink" title="1. Update the server and install dependencies:"></a>1. Update the server and install dependencies:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update -y &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure><h5 id="1-1-Install-unzip-dependency"><a href="#1-1-Install-unzip-dependency" class="headerlink" title="1.1 Install unzip dependency"></a>1.1 Install unzip dependency</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install unzip git -y</span><br></pre></td></tr></table></figure><h5 id="2-Install-Apache-Webserver"><a href="#2-Install-Apache-Webserver" class="headerlink" title="2. Install Apache Webserver"></a>2. Install Apache Webserver</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apache2 -y</span><br></pre></td></tr></table></figure><p><em>In case, you enabled firewall and firewall block requests of the apache web server,<br>open a port in the firewall.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 80/tcp</span><br><span class="line">sudo ufw allow 443/tcp</span><br><span class="line">sudo ufw reload</span><br></pre></td></tr></table></figure><p><em>Now, verify the Apache installation. Open browser and test default page.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost</span><br></pre></td></tr></table></figure><p><em>Enable Apache’s mod_rewrite module. Snipe-IT requires this extension to rewrite URLs more cleanly.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure><p><em>Restart your Apache web server to apply the changes.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><h5 id="3-Install-MariaDB"><a href="#3-Install-MariaDB" class="headerlink" title="3. Install MariaDB"></a>3. Install MariaDB</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mariadb-server mariadb-client -y</span><br></pre></td></tr></table></figure><p><em>The default configuration of the MariaDB will not be secured. Let’s secured the installation using the following command:</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure><p><em>Once the script gets executed, it will ask multiple questions.<br>It will ask you to enter the current password for root (enter for none):<br>Then enter yes&#x2F;y to the following security questions:</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Set a root password? [Y/n]: y</span><br><span class="line">Remove anonymous users? : y</span><br><span class="line">Disallow root login remotely? : y</span><br><span class="line">Remove test database and access to it? : y</span><br><span class="line">Reload privilege tables now? : y</span><br></pre></td></tr></table></figure><h5 id="4-Install-PHP-and-PHP-Composer"><a href="#4-Install-PHP-and-PHP-Composer" class="headerlink" title="4. Install PHP and PHP Composer"></a>4. Install PHP and PHP Composer</h5><p><em>Here we are installing the default PHP version 8.1 and other modules for web deployments using the following command:</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install php php-common php-bcmath php-bz2 php-intl php-gd php-mbstring php-mysql php-zip php-opcache php-intl php-json php-mysqli php-readline php-tokenizer php-curl php-ldap -y</span><br></pre></td></tr></table></figure><p><em>Install PHP Composer, which is a PHP dependency management tool to install and update libraries in your Snipe-IT.<br>Download the Composer installer.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -sS https://getcomposer.org/installer | php</span><br></pre></td></tr></table></figure><p><em>Move the composer.phar executable to &#x2F;usr&#x2F;local&#x2F;bin&#x2F;.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure><h5 id="5-Create-a-Database"><a href="#5-Create-a-Database" class="headerlink" title="5. Create a Database"></a>5. Create a Database</h5><p><em>Create a database and database user for Snipe-IT. First login into MySQL&#x2F;MariaDB as a root user.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root -p</span><br></pre></td></tr></table></figure><p><em>Run following commands to perform this task:</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE snipe_it;</span><br><span class="line">CREATE USER &#x27;snipe_it_user&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;EXAMPLE_PASSWORD&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON snipe_it.* TO &#x27;snipe_it_user&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">EXIT;</span><br></pre></td></tr></table></figure><p><em>Note: Replace snipe_it_user to your choice username and replace <strong>EXAMPLE_PASSWORD</strong> to you choice password.</em></p><h5 id="6-Install-Snipe-IT"><a href="#6-Install-Snipe-IT" class="headerlink" title="6. Install Snipe-IT"></a>6. Install Snipe-IT</h5><p><em>Navigate to the root directory of your web server.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/</span><br></pre></td></tr></table></figure><p><em>Use git to clone the latest Snipe-IT repository from the <a href="https://github.com/snipe/snipe-it">https://github.com/snipe/snipe-it</a> URL and copy the downloaded files to a snipe-it directory.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo git clone https://github.com/snipe/snipe-it snipe-it</span><br></pre></td></tr></table></figure><p><em>Switch to the snipe-it directory.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd snipe-it</span><br></pre></td></tr></table></figure><p><em>Snipe-IT ships with a sample configuration file. Copy it to &#x2F;var&#x2F;www&#x2F;snipe-it&#x2F;.env.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /var/www/snipe-it/.env.example /var/www/snipe-it/.env</span><br></pre></td></tr></table></figure><p><em>Edit the configuration file.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /var/www/snipe-it/.env</span><br></pre></td></tr></table></figure><p><em>In the Snipe-IT configuration file, locate these settings.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">APP_URL=null</span><br><span class="line">APP_TIMEZONE=&#x27;UTC&#x27;</span><br></pre></td></tr></table></figure><p><em>Set APP_URL to your server’s Fully Qualified Domain Name, or it’s public IP address. If you use a time zone other than UTC, change the timezone to a PHP-supported timezone, and enclose it in single quotes.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">APP_URL=example.com</span><br><span class="line">APP_TIMEZONE=&#x27;America/New_York&#x27;</span><br></pre></td></tr></table></figure><p><em>Locate these settings.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DB_DATABASE=null</span><br><span class="line">DB_USERNAME=null</span><br><span class="line">DB_PASSWORD=null</span><br></pre></td></tr></table></figure><p><em>Change those values to the database information you set up in Step 3.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DB_DATABASE=snipe_it</span><br><span class="line">DB_USERNAME=snipe_it_user</span><br><span class="line">DB_PASSWORD=EXAMPLE_PASSWORD</span><br></pre></td></tr></table></figure><p><em>Save and close the file.</em></p><p><em>Install the Snipe-IT dependencies with Composer. You’ll receive a warning not to run this as root on each command. It’s okay to continue as root for the Snipe-IT install, so type yes and hit ENTER.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">composer update — no-plugins — no-scripts</span><br><span class="line">composer install — no-dev — prefer-source — no-plugins — no-scripts</span><br></pre></td></tr></table></figure><p><em>Set the correct ownership and permission for the Snipe-IT data directory.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R www-data:www-data /var/www/snipe-it</span><br><span class="line">sudo chmod -R 777 storage</span><br></pre></td></tr></table></figure><p><em>Once the Composer finishes running, generate a Laravel APP_Key value in the &#x2F;var&#x2F;www&#x2F;snipe-it&#x2F;.env configuration file you created earlier. Type yes and hit ENTER when prompted to continue.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo php artisan key:generate</span><br></pre></td></tr></table></figure><h5 id="7-Create-a-Virtual-Host-File"><a href="#7-Create-a-Virtual-Host-File" class="headerlink" title="7. Create a Virtual Host File"></a>7. Create a Virtual Host File</h5><p><em>First we’ll disable default Apacheconf file and create new vhost conf file.<br>Disable the default Apache configuration file.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2dissite 000-default.conf</span><br></pre></td></tr></table></figure><p><em>Create a new Apache configuration file.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apache2/sites-available/snipe-it.conf</span><br></pre></td></tr></table></figure><p><em>Paste the information below and replace example.com with your server’s domain name or public IP address.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName example.com</span><br><span class="line">    DocumentRoot /var/www/snipe-it/public</span><br><span class="line"></span><br><span class="line">    &lt;Directory /var/www/snipe-it/public&gt;</span><br><span class="line">        Options Indexes FollowSymLinks MultiViews</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">    ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class="line">    CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p><em>Save and exit the file</em></p><p><em>Enable your new configuration file</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2ensite snipe-it.conf</span><br></pre></td></tr></table></figure><p><em>Restart your Apache web server to apply the changes.</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><h5 id="8-Run-the-Setup-Wizard"><a href="#8-Run-the-Setup-Wizard" class="headerlink" title="8. Run the Setup Wizard"></a>8. Run the Setup Wizard</h5><p><em>Navigate to your browser and access the setup wizard using your server IP or domain name you have mentioned in vhost conf file.</em></p><p>More info : <a href="https://hostnextra.medium.com/install-snipe-it-on-ubuntu-22-04-hostnextra-9fec546373c9">Documentation</a></p>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
          <category> Platform </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2024 最终章</title>
      <link href="/en/2024/12/02/Final-2024/"/>
      <url>/en/2024/12/02/Final-2024/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h4 id="人类"><a href="#人类" class="headerlink" title="人类"></a>人类</h4><p>当人离开这个世界后，过去大部分的事情都会逐渐释怀也或许不。<br>最近看了 破·地狱 这部电影挺感触，因为它演出了真实的人性<br>人 · 来到这世上就已经在倒数<br>人 · 真正释怀是在即将离世前<br>人 · 习惯于隐藏自己在乎的事<br>人 · 习惯于伤害着身边的亲人</p><p>一个人知道自己时日不多的时候，会愿意将多年以来的心底话表达出来的原因是什么 ?<br>因为知道这一刻不说就没有机会，并且遗憾。</p><p>既然如此，人为什么不在一开始就试着对在乎的人表达心内话 ?<br>怕丢脸 ? 怕失望 ? 怕挫败 ? 怕被人笑 ?</p><p>人 如今是越来越脆弱，分分钟就会来不及告别而离开</p><hr><h4 id="还有可能是友情"><a href="#还有可能是友情" class="headerlink" title="还有可能是友情 ?"></a>还有可能是友情 ?</h4><p>善变的确折腾了很久，因为还在乎还持有希望，<br>但在重复来回着终于彻底接受 “别人重于他人胜于自己，不把当自己一回事” 的事实。<br>那所谓的 :<br>“你对他的好，别人也可以做到”<br>“别人这个年纪已经多少$$$$”<br>“问题永远是别人”<br>“自私自利 利用他人”<br>“双重标准，利益衡量”<br>“藕断丝连，自以为是”<br>“对他人有时间，对自己没时间”<br>“被晾着信息几天不回复，理由既然是忘记”</p><p>三观确实重要，活生生的例子”看电影”<br>我认为是乐趣<br>她认为是奢侈</p><hr><h4 id="职场"><a href="#职场" class="headerlink" title="职场"></a>职场</h4><p>依然在探索和学习自己想要追求的技术，虽然说现今已经踏入AI时代，很多资讯可说是轻而易举可以找到和学习，<br>但是对于未来的方向和竞争也偶尔难免会觉得越来越激烈和迷茫。不过依然确信只是有不断学习和迭代才能有创新的想法和灵感，<br>不要怀疑自己的方向，坚持的往前走并追求自己想要的知识和科技。</p><p>有谁不向”钱”看齐，但是君子爱财取之有道，而非盲目的追求成为被钱左右的钱奴，如果说为了钱可以连自己都出卖，哪是否已经连基本的人性都丢失？<br>何谓好工作？好做工的定义是什么？我相信这个问题是见仁见智取决于个人的定义。<br>有得追求平稳低压自由但收入不高;<br>有得追求高薪但背负高压且不自由。</p><p>每个人的际遇不同，如果说某些人在中年以上才实现财务自由，难道这算失败 ?<br>反之，在30之前实现财务自由就算成功 ?<br>这个问题也是取决于个人身边的种种因素如，朋友圈，亲戚，家庭，观看社交媒体的类型等等。<br>所以我逐渐意识到一个人能真正的跟着自己内心做自己的人，不被周遭的诱惑牵动和随波逐流才能在当今时代过得比他人开心。</p>]]></content>
      
      
      <categories>
          
          <category> Stories </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/undefined/2024/11/18/hello-world/"/>
      <url>/undefined/2024/11/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
